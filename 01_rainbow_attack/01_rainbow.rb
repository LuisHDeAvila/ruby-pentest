require 'digest'

def md5 password, diccionario
    diccionario = diccionario.split("\n")
    diccionario.each do |value|
        cifrado = Digest::MD5.hexdigest value
        if cifrado == password
            return value
            break
        end
    end
end

def sha1 password, diccionario
    diccionario = diccionario.split("\n")
    diccionario.each do |value|
        cifrado = Digest::SHA1.hexdigest value
        if cifrado == password
            return value
            break
        end
    end
end

def sha256 password, diccionario
    diccionario = diccionario.split("\n")
    diccionario.each do |value|
        cifrado = Digest::SHA256.hexdigest value
        if cifrado == password
            return value
            break
        end
    end
end

def sha512 password, diccionario
    diccionario = diccionario.split("\n")
    diccionario.each do |value|
        cifrado = Digest::SHA512.hexdigest value
        if cifrado == password
            return value
            break
        end
    end
end

def menu
    puts ".:bievenidos"
    puts " ingresa el hash para determinar que tipo es y cual es su valor"
    print ">> "
    password = gets.chomp

    diccionario = File.new('pass.txt', 'r')
    diccionario = diccionario.read

    case password.length
    when 32
        puts "El hash es MD5"
        puts "El valor es #{md5(password, diccionario)}"
    when 40
        puts "El hash es SHA1"
        puts "El valor es #{sha1(password, diccionario)}"
    when 64
        puts "El hash es SHA256"
        puts "El valor es #{sha256(password, diccionario)}"
    when 128
        puts "El hash es SHA512"
        puts "El valor es #{sha512(password, diccionario)}"
    else
        puts "No se reconocio el tipo de hash"
    end
end

menu
        

